token = "bot_token"  # The token for the bot
owners = [ 141231597155385344, ]  # List of owner IDs - these people override all permission checks
dm_uncaught_errors = false  # Whether or not to DM the owners when unhandled errors are encountered
default_prefix = "!"  # The prefix for the bot's commands
event_webhook_url = ""  # Some events will be posted via webhook to this url

# Data for the plant bot
[plants]
    hard_plant_cap = 10  # The maximum amount of plant pots that a user can buy
    plant_pot_base_price = 500  # The base value before we get into the price curve
    revival_token_price = 3_000  # The price of revival tokens
    [plants.death_timeout]  # The death timeout - this gets passed directly into a timedelta
        days = 3
    [plants.water_cooldown]  # The water command cooldown - this gets passed directly into a timedelta
        minutes = 15
    [plants.guest_water_cooldown]  # The water command cooldown for watering someone else's plant
        minutes = 60
    [plants.notification_time]
        days = 1

# The intents that the bot should start with
[intents]
    # Guilds - recommended: true. Used for guild join/remove, channel create/delete/update, Bot.get_channel, Bot.guilds.
    guilds = true
    # Members - recommended: false (privileged intent). Used for member join/remove/update, Member.roles, Member.nick, User.name, etc.
    members = false
    # Bans - recommended: false. Used for member ban/unban.
    bans = false
    # Emojis - recommended: false. Used for guild emojis update, Bot.get_emoji, Guild.emojis.
    emojis = false
    # Integrations - recommended: false. Used for guild integrations update.
    integrations = false
    # Webhooks - recommended: false. Used for guild webhooks update.
    webhooks = false
    # Invites - recommended: false. Used for invite create/delete.
    invites = false
    # Voice states - recommended: false. Used for voice state update, VoiceChannel.members, Member.voice.
    voice_states = false
    # Presences - recommended: false (privileged intent). Used for member update (for activities and status), Member.status.
    presences = false
    # Guild messages - recommended: true. Used for message events in guilds.
    guild_messages = true
    # DM messages - recommended: true. Used for message events in DMs.
    dm_messages = true
    # Guild reactions - recommended: false. Used for [raw] reaction add/remove/clear events in guilds.
    guild_reactions = true
    # DM reactions - recommended: false. Used for [raw] reaction add/remove/clear events in DMs.
    dm_reactions = false
    # Guild typing - recommended: false. Used for the typing event in guilds.
    guild_typing = false
    # DM typing - recommended: false. Used for the typing event in Dms.
    dm_typing = false

# Data used to send API requests to whatever service
[bot_listing_api_keys]
    topgg_token = ""  # The token used to post data to top.gg
    discordbotlist_token = ""  # The token used to post data to discordbotlist.com

# Data that's copied directly over to a command
[command_data]
    website_link = ""
    guild_invite = ""  # A link to be used on !support
    github_link = ""  # A link to be used on !git
    donate_link = ""  # A link to be used on !donate
    invite_command_permissions = []  # args here are passed directly to discord.Permissions. An empty list disabled the invite command
    echo_command_enabled = true  # Whether or not the invite command is enabled
    stats_command_enabled = true  # Whether or not the stats command is enabled
    vote_command_enabled = false  # Whether or not the top.gg vote command is enabled
    updates_channel_id = 0  # The ID of the news channel for the bot
    suggestion_channel_id = 0  # The ID of the channel where suggestions should be sent

# This data is passed directly over to asyncpg.connect()
[database]
    user = "database_username"
    password = "database_password"
    database = "database_name"
    host = "127.0.0.1"
    port = 5432
    enabled = false

# This data is passed directly over to aioredis.connect()
[redis]
    host = "127.0.0.1"
    port = 6379
    db = 0
    enabled = false

# The data that gets shoves into custom context for the embed
[embed]
    enabled = false  # whether or not to embed messages by default
    content = ""  # default content to be added to the embed message
    colour = 0  # a specific colour for the embed - 0 means random
    [embed.author]
        enabled = false
        name = "{ctx.bot.user}"
        url = ""  # the url added to the author
    [[embed.footer]]  # an array of possible footers
        text = "Add the bot to your server! ({ctx.clean_prefix}invite)"  # text to appear in the footer
        amount = 1  # the amount of times this particular text is added to the pool
    [[embed.footer]]  # an array of possible footers
        text = "Vote for Flower on Top.gg! ({ctx.clean_prefix}vote)"
        amount = 1
    [[embed.footer]]
        text = "Trade plants with your friends! ({ctx.clean_prefix}trade)"
        amount = 1
    [[embed.footer]]
        text = "Suggest new plants for Flower! ({ctx.clean_prefix}suggest)"
        amount = 1

# What the bot is playing
[presence]
    activity_type = "watching"  # Should be one of 'playing', 'listening', 'watching', 'competing'
    text = "VoxelBotUtils"
    status = "online"  # Should be one of 'online', 'invisible', 'idle', 'dnd'
    include_shard_id = true  # Whether or not to append "(shard N)" to the presence; only present if there's more than 1 shard
    [presence.streaming]  # This is used to automatically set the bot's status to your Twitch stream when you go live
        twitch_usernames = [ "kaylum_", ]  # The URL to your Twitch.tv channel
        twitch_client_id = ""  # Your client ID - https://dev.twitch.tv/console/apps
        twitch_client_secret = ""  # Your client secret

# Used to generate the invite link - if not set then will use the bot's ID, which is correct more often than not
[oauth]
    client_id = ""

# This is where you can set up all of your analytics to be sent to GA
[google_analytics]
    tracking_id = ""  # Tracking ID for your GA instance
    app_name = ""  # The name of your bot - what you want GA to name this traffic source
    document_host = ""  # The (possibly fake) URL you want to tell GA this website is
